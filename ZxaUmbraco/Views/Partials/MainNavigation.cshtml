@inherits Umbraco.Web.Mvc.UmbracoTemplatePage
@{ var home = CurrentPage.Site(); }

@if (home.Children.Any())
{
    @* Get the first page in the children *@
var naviLevel = home.Children.First().Level;
var HP = Model.Content.AncestorsOrSelf(1).FirstOrDefault();

    @* Add in level for a CSS hook *@
    <ul class="level-@naviLevel">            
        @* For each child page under the home node *@
        <li id="navList" class=""><a href="@HP.Url">@HP.GetPropertyValue("pageTitle")</a></li>
        @foreach (var childPage in home.Children)
        {   
            if (childPage.Children.Any())
            {                    
                <li class="has-child @(childPage.IsAncestorOrSelf(CurrentPage) ? "selected" : null)">
					@if(childPage.DocumentTypeAlias == "newsOverveiw" ) 
					{
                    	<span>@childPage.Name</span>
						@childPages(childPage.Children)
					} else {
						<a href="@childPage.Url">@childPage.Name</a>
					}
                </li>
            } 
			else
            {
                <li class="@(childPage.IsAncestorOrSelf(CurrentPage) ? "selected" : null)">
                    <a href="@childPage.Url">@childPage.Name</a>
                </li>
            }            

        }
        @{
            var languages = Umbraco.TypedContentAtRoot();
        }
        @foreach (var language in languages)
        {
            if (language.HasProperty("languageIcon"))
            {
                var imgId = language.GetPropertyValue("languageIcon");
                var img = Umbraco.Media(imgId);
                <a href="@language.Url">
                    <img src="@img.Url" alt="@img.Name" height="30px" width="30px" style="margin: 0px 0px 0px 10px" />
                </a>
            }
        }
    </ul>
}

@helper childPages(dynamic pages)
{
    @* Ensure that we have a collection of pages *@
    if (pages.Any())
    {
        @* Get the first page in pages and get the level *@
        var naviLevel = pages.First().Level;
        
        @* Add in level for a CSS hook *@
        <ul class="sublevel level-@(naviLevel)">
            @foreach (var page in pages)
            {
                <li>
                    <a href="@page.Url">@page.Name</a>
                    
                    @* if the current page has any children *@
                    @if (page.Children.Any())
                    {                        
                        @* Call our helper to display the children *@
                        @childPages(page.Children)
                    }
                </li>
            }
        </ul>
    }


}
<div class="col-lg-3 input-group">
    @{

        var SearchResultsPage = Model.Content.AncestorOrSelf(1).Children().Where(x => x.DocumentTypeAlias == "searchResults").First();
        //  var HomePage = @CurrentPage.AncestorsOrSelf(1).First();

    }
    <form action="@SearchResultsPage.UrlAbsolute()" method="post" target="_self">
        <input type="text" class="form-control" placeholder='@Umbraco.Field("#Search Placeholder")' name="query" />
        <span class="input-group-btn"><button class="btn btn-default" type="submit"><span class="glyphicon glyphicon-search"></span></button></span>

    </form>
</div>